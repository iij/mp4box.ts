import { Mp4Box } from "../";
import { SampleParams } from "../types";

// ISO/IEC 14496-12 8.3.2
export function make(mp4box: Mp4Box, params: SampleParams | SampleParams[] | undefined = undefined): Uint8Array {
    const UINT32_MAX = Math.pow(2, 32) - 1;
    const id         = mp4box.trackId;
    const timescale  = mp4box.timescale;
    params = params as SampleParams;
    if (params.duration == undefined) {
	throw new Error("need duration");
    }
    const duration   = params.duration * timescale;
    const width      = mp4box.width;
    const height     = mp4box.height;
    const upperword  = Math.floor(duration / (UINT32_MAX + 1));
    const lowerword  = Math.floor(duration % (UINT32_MAX + 1));
    return new Uint8Array([
	0x01, // version
	0x00, 0x00, 0x07, // flags
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time
	(id >> 24) & 0xff,
	(id >> 16) & 0xff,
	(id >> 8)  & 0xff,
	id         & 0xff,
	0x00, 0x00, 0x00, 0x00, // reserved
	upperword >> 24,
	(upperword >> 16) & 0xff,
	(upperword >> 8) & 0xff,
	upperword & 0xff,
	lowerword >> 24,
	(lowerword >> 16) & 0xff,
	(lowerword >> 8) & 0xff,
	lowerword & 0xff,
	0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, // reserved
	0x00, 0x00, // layer
	0x00, 0x00, // alternate_group
	0x00, 0x00, // volume
	0x00, 0x00, // reserved
	0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
	0x40, 0x00, 0x00, 0x00, // transformation: unity matrix
	(width >> 8) & 0xff,
	width & 0xff,
	0x00,
	0x00, // width
	(height >> 8) & 0xff,
	height & 0xff,
	0x00,
	0x00, // height
    ]);
}
